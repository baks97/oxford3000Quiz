import streamlit as st
import random
import json
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ª–æ–≤–∞ –∏–∑ —Ñ–∞–π–ª–∞ words.md
def load_words_from_file():
    with open("words.md", "r", encoding="utf-8") as f:
        words = f.read().splitlines()
    return words

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
if "words" not in st.session_state:
    st.session_state["words"] = load_words_from_file()
if "screen" not in st.session_state:
    st.session_state["screen"] = "main"
if "current_index" not in st.session_state:
    st.session_state["current_index"] = 0
if "shuffled_words" not in st.session_state:
    st.session_state["shuffled_words"] = []
if "dark_mode" not in st.session_state:
    st.session_state["dark_mode"] = False
if "user" not in st.session_state:
    st.session_state["user"] = "lion"  # default user

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def load_user_data():
    if not os.path.exists("user_data.json"):
        return {}
    with open("user_data.json", "r", encoding="utf-8") as f:
        try:
            return json.load(f)
        except json.JSONDecodeError:
            return {}  # –µ—Å–ª–∏ —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å

def save_user_data(user_data):
    with open("user_data.json", "w", encoding="utf-8") as f:
        json.dump(user_data, f, ensure_ascii=False, indent=4)

user_data = load_user_data()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
def toggle_theme():
    st.session_state["dark_mode"] = not st.session_state["dark_mode"]

# –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
def main_screen():
    st.title("üìö –£—á–∏–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞")

    # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
    theme_button = "üåô –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É" if not st.session_state["dark_mode"] else "‚òÄÔ∏è –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É"
    if st.button(theme_button):
        toggle_theme()
        st.rerun()

    # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_button = "ü¶Å –õ—å–≤–µ–Ω–æ–∫" if st.session_state["user"] == "lion" else "ü¶à –ê–∫—É–ª–µ–Ω–æ–∫"
    if st.button(user_button):
        st.session_state["user"] = "shark" if st.session_state["user"] == "lion" else "lion"
        st.rerun()

    # –í—ã–±–æ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è
    st.markdown("### –°–∫–æ–ª—å–∫–æ —Å–ª–æ–≤ —É—á–∏—Ç—å?")
    col1, col2, col3 = st.columns(3)
    with col1:
        if st.button("20 —Å–ª–æ–≤", use_container_width=True):
            start_study(20)
    with col2:
        if st.button("30 —Å–ª–æ–≤", use_container_width=True):
            start_study(30)
    with col3:
        if st.button("50 —Å–ª–æ–≤", use_container_width=True):
            start_study(50)

    # –ü–ª–∞—à–∫–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
    st.markdown(f'<div style="text-align: center;"><img src="lion.png" width="100"/><p>–° –ª—é–±–æ–≤—å—é –¥–ª—è –ª—å–≤—ë–Ω–∫–∞ ‚ù§Ô∏è</p></div>', unsafe_allow_html=True)

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—á–∞–ª–∞ –æ–±—É—á–µ–Ω–∏—è
def start_study(word_count):
    st.session_state["screen"] = "study"
    st.session_state["current_index"] = 0
    st.session_state["word_count_choice"] = word_count
    st.session_state["shuffled_words"] = random.sample(st.session_state["words"], k=word_count)
    st.session_state["rerun_theme"] = False
    st.rerun()

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤
def study_screen():
    words = st.session_state["shuffled_words"]
    index = st.session_state["current_index"]

    if index < len(words):
        current_word = words[index]
        st.subheader(f"–°–ª–æ–≤–æ {index + 1} –∏–∑ {len(words)}: {current_word}")

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        col1, col2, col3 = st.columns(3)
        with col1:
            if st.button("–Ø –Ω–µ –∑–Ω–∞—é"):
                add_to_hard_words(current_word)
        with col2:
            if st.button("–í–ø–µ—Ä–µ–¥"):
                st.session_state["current_index"] += 1
                st.rerun()
        with col3:
            if st.button("–ù–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω"):
                st.session_state["screen"] = "main"
                st.session_state["current_index"] = 0
                st.session_state["shuffled_words"] = []
                st.rerun()

        # –ó–Ω–∞—á–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        active_user_icon = "ü¶Å –õ—å–≤–µ–Ω–æ–∫" if st.session_state["user"] == "lion" else "ü¶à –ê–∫—É–ª–µ–Ω–æ–∫"
        st.markdown(f"### –ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {active_user_icon}")
    else:
        show_results_screen()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä—É–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –≤ —Å–ø–∏—Å–æ–∫
def add_to_hard_words(word):
    user = st.session_state["user"]
    if user not in user_data:
        user_data[user] = {"hard_words": [], "viewed_words": []}
    
    if word not in user_data[user]["hard_words"]:
        user_data[user]["hard_words"].append(word)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    save_user_data(user_data)

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
def show_results_screen():
    st.header("–í—ã –∏–∑—É—á–∏–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Å–ª–æ–≤–∞:")
    user = st.session_state["user"]
    words_learned = user_data.get(user, {}).get("viewed_words", [])
    if words_learned:
        st.write(", ".join(words_learned))
    else:
        st.write("–ï—â–µ –Ω–µ –∏–∑—É—á–µ–Ω—ã —Å–ª–æ–≤–∞.")
    
    # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
    if st.button("–ù–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω"):
        st.session_state["screen"] = "main"
        st.session_state["current_index"] = 0
        st.session_state["shuffled_words"] = []
        st.rerun()

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
if st.session_state["screen"] == "main":
    main_screen()
elif st.session_state["screen"] == "study":
    study_screen()
else:
    st.error("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —ç–∫—Ä–∞–Ω!")
