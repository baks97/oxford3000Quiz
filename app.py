import streamlit as st
import time
import random

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ
def parse_md_file(file_path):
    with open(file_path, 'r', encoding='utf-8') as file:
        lines = file.readlines()

    words = []
    word = {}

    for line in lines:
        line = line.strip()

        if line.startswith("## üî§"):
            if word:
                words.append(word)
            word = {'word': line[3:].strip()}  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ª–æ–≤–æ, —É–¥–∞–ª—è—è "## üî§"
        elif line.startswith("**//"):
            word['transcription'] = line[2:-2]  # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –≤–æ–∫—Ä—É–≥ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏
        elif line.startswith("*"):
            word['part_of_speech'] = line[1:-1].strip()  # –ß–∞—Å—Ç—å —Ä–µ—á–∏
        elif line.startswith("### üìò Oxford"):
            word['meaning'] = line
        elif line.startswith("### üåç –ü–µ—Ä–µ–≤–æ–¥—ã (Cambridge)"):
            word['translation'] = line
        elif line.startswith("### üßæ –ü—Ä–∏–º–µ—Ä—ã"):
            word['examples'] = line

    if word:
        words.append(word)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ

    return words

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
if 'index' not in st.session_state:
    st.session_state.index = 0
if 'answers' not in st.session_state:
    st.session_state.answers = []
if 'show' not in st.session_state:
    st.session_state.show = False

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –≤—ã–±–æ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤
words_all = parse_md_file("quiz.md")
words_to_show = words_all[:7]  # –ü—Ä–∏–º–µ—Ä –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ 7 —Å–ª–æ–≤, –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é

# –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞
word = words_to_show[st.session_state.index]
st.write(f"–°–ª–æ–≤–æ: {word['word']}")
st.write(f"–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è: {word['transcription']}")
st.write(f"–ß–∞—Å—Ç—å —Ä–µ—á–∏: {word['part_of_speech']}")

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
if st.button("–ü–æ–∫–∞–∑–∞—Ç—å/–°–∫—Ä—ã—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ"):
    st.session_state.show = not st.session_state.show
    if st.session_state.show:
        st.write(f"–ó–Ω–∞—á–µ–Ω–∏–µ: {word['meaning']}")
        st.write(f"–ü–µ—Ä–µ–≤–æ–¥: {word['translation']}")
        st.write(f"–ü—Ä–∏–º–µ—Ä—ã: {word['examples']}")

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö/–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
col1, col2 = st.columns([1, 1])

with col1:
    if st.button("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ"):
        st.session_state.answers.append((word['word'], True))

with col2:
    if st.button("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ"):
        st.session_state.answers.append((word['word'], False))

# –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–æ–≤—É –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –∫–≤–∏–∑–∞
if st.session_state.index + 1 < len(words_to_show):
    st.session_state.index += 1
else:
    st.session_state.page = "result"
    st.write("–ö–≤–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω")

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –Ω–∞—á–∞–ª–æ
if st.session_state.page == "result":
    st.write("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–≤–∏–∑–∞")
